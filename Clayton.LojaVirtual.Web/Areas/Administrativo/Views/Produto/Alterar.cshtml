@model Clayton.LojaVirtual.Dominio.Entidade.Produto

@{
    ViewBag.Title = "Alterar " + @Model.Nome;
    Layout = "~/Areas/Administrativo/Views/Shared/_AdministrativoLayout.cshtml";

    string nomeProduto = ViewBag.NomeProduto;
}

@if (@Model.ProdutoId > 0)
{
    <h3>Alterar Produto</h3>
    <h4>@nomeProduto</h4>
}
else
{
    <h3>Novo Produto</h3>
}

@using (Html.BeginForm("Alterar", "Produto", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
         <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProdutoId)
        @Html.Hidden("hidNomeProduto", nomeProduto)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Informe o nome do produto" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control", rows = 5, @placeholder = "Informe a descrição do produto" })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control", @placeholder = "Informe o preço do produto" } })
                @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Categoria, new { htmlAttributes = new { @class = "form-control", @placeholder = "Informe a categoria do produto" } })
                @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="position:relative;">
                <a class='btn' href='javascript:;'>
                    Selecione a imagem
                    <input type="file" name="image" size="40" style="position:absolute;z-index:2;top:0; left:0;filter: alpha(opacity=0); opacity:0; background-color:transparent;color:transparent;" onchange='$("#upload-file-info").html($(this).val());'>
                </a>
                <span id="upload-file-info" class="label label-info"></span>
                @Html.ValidationMessageFor(model => model.Imagem, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-10 col-md-offset-2">
                @if(Model.Imagem == null)
                {
                    <div class="form-control-static">Nenhuma imagem</div>
                }
                else
                {
                    <img class="img-thumbnail" width="120" height="120" src="@Url.Action("ObterImagem", "Vitrine", new { Model.ProdutoId ,  Area = "" })" />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary" />
                @Html.ActionLink("Cancelar e retornar", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>

    <hr />


}

@*<div class="panel">
    <div class="panel-heading">
        <h2>Alterar - @Model.Nome</h2>
    </div>

    @using (Html.BeginForm())
    {
        <div class="panel-body">

            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ProdutoId)

            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                if (property.PropertyName != "ProdutoId")
                {
                    <div class="form-group">
                        <label class="control-label col-md-2">@(property.DisplayName ?? property.PropertyName)</label>

                        @if (property.PropertyName == "Descricao")
                        {
                            @Html.TextArea(property.PropertyName, null, new { @class = "form-control", rows = 5, @placeholder = "Descrição" })
                        }
                        else
                        {
                            @Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
                        }

                    </div>
                }

            }
        </div>
        
        <div class="panel-footer">
            <input type="submit" value="Salvar" class="btn btn-primary" />
            @Html.ActionLink("Cancelar e retornar", "Index", null, new { @class = "btn btn-default" })
        </div>


    }
</div>*@
